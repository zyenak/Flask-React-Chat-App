{"ast":null,"code":"export const setConnectedClients = clients => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_CONNECTED_CLIENTS',\n      payload: clients\n    });\n  };\n};\nexport const setMessages = (clientId, decryptedMessage) => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_MESSAGES',\n      payload: [{\n        clientId,\n        message: decryptedMessage\n      }]\n    });\n  };\n};\nexport const removeMessagesForClient = message => {\n  return dispatch => {\n    dispatch({\n      type: 'REMOVE_MESSAGES_FOR_CLIENT',\n      payload: message\n    });\n  };\n};\nexport const setChatboxDimensions = dimensions => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_CHATBOX_DIMENSIONS',\n      payload: dimensions\n    });\n  };\n};\nexport const setConnected = isConnected => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_CONNECTED',\n      payload: isConnected\n    });\n  };\n};\nexport const setAuthentication = isAuthenticated => {\n  return dispatch => {\n    dispatch({\n      type: 'SET_AUTHENTICATION',\n      payload: isAuthenticated\n    });\n  };\n};","map":{"version":3,"names":["setConnectedClients","clients","dispatch","type","payload","setMessages","clientId","decryptedMessage","message","removeMessagesForClient","setChatboxDimensions","dimensions","setConnected","isConnected","setAuthentication","isAuthenticated"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/state/action-creators/index.js"],"sourcesContent":["export const setConnectedClients = (clients) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CONNECTED_CLIENTS',\r\n            payload: clients\r\n        })\r\n    }  \r\n}\r\n\r\nexport const setMessages = (clientId, decryptedMessage) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_MESSAGES',\r\n            payload: [{ clientId, message: decryptedMessage }],\r\n        });\r\n    };\r\n};\r\n\r\nexport const removeMessagesForClient = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'REMOVE_MESSAGES_FOR_CLIENT',\r\n            payload: message,\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const setChatboxDimensions = (dimensions) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CHATBOX_DIMENSIONS',\r\n            payload: dimensions,\r\n        })\r\n    }  \r\n}\r\n\r\nexport const setConnected = (isConnected) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_CONNECTED',\r\n            payload: isConnected,\r\n        })\r\n    } \r\n}\r\n\r\n\r\nexport const setAuthentication = (isAuthenticated) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SET_AUTHENTICATION',\r\n            payload: isAuthenticated,\r\n        })\r\n    } \r\n}\r\n    \r\n  \r\n  \r\n\r\n\r\n  \r\n\r\n\r\n  "],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,OAAO,IAAK;EAC5C,OAAQC,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,uBAAuB;MAC7BC,OAAO,EAAEH;IACb,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,WAAW,GAAGA,CAACC,QAAQ,EAAEC,gBAAgB,KAAK;EACvD,OAAQL,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAE,CAAC;QAAEE,QAAQ;QAAEE,OAAO,EAAED;MAAiB,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAME,uBAAuB,GAAID,OAAO,IAAK;EAChD,OAAQN,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,4BAA4B;MAClCC,OAAO,EAAEI;IACb,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAGD,OAAO,MAAME,oBAAoB,GAAIC,UAAU,IAAK;EAChD,OAAQT,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,wBAAwB;MAC9BC,OAAO,EAAEO;IACb,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,WAAW,IAAK;EACzC,OAAQX,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAES;IACb,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAGD,OAAO,MAAMC,iBAAiB,GAAIC,eAAe,IAAK;EAClD,OAAQb,QAAQ,IAAK;IACjBA,QAAQ,CAAC;MACLC,IAAI,EAAE,oBAAoB;MAC1BC,OAAO,EAAEW;IACb,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}