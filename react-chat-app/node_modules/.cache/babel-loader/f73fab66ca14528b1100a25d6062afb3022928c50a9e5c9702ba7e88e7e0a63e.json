{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZyPrograms\\\\Quest\\\\Projects\\\\Chat\\\\react-chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport ChatBox from './components/ChatBox';\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\n// Encryption function\nconst encrypt = (message, key) => {\n  const encrypted = CryptoJS.AES.encrypt(message, key).toString();\n  return encrypted;\n};\n\n// Decryption function\nconst decrypt = (ciphertext, key) => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n  return decrypted;\n};\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [connected, setConnected] = useState(false);\n  //const [connectedClients, setConnectedClients] = useState([]);\n\n  const connectedClients = useSelector(state => state.connectedClients);\n  const dispatch = useDispatch();\n  // action creators has all the methods like setConnectedClients\n  const {\n    setConnectedClients\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const handleReceivedMessage = data => {\n      const {\n        clientId,\n        message\n      } = data;\n      const decryptedMessage = decrypt(message, 'Sixteen byte key');\n      console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages(prevMessages => [...prevMessages, {\n        clientId,\n        message: decryptedMessage\n      }]);\n    };\n    const handleConnectedClients = clients => {\n      setConnectedClients(clients);\n    };\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl mb-4\",\n        children: \"Chat with Friends!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        messages: messages,\n        setMessages: setMessages,\n        connected: connected,\n        handleConnect: handleConnect,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-start space-y-2\",\n        children: connectedClients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: `Client ${client}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, client, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UZiLS5yNMD9/nN0+Vn9NlvAJwjE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","bindActionCreators","actionCreators","io","CryptoJS","ChatBox","jsxDEV","_jsxDEV","socket","encrypt","message","key","encrypted","AES","toString","decrypt","ciphertext","bytes","decrypted","enc","Utf8","App","_s","messages","setMessages","connected","setConnected","connectedClients","state","dispatch","setConnectedClients","handleReceivedMessage","data","clientId","decryptedMessage","console","log","prevMessages","handleConnectedClients","clients","on","off","disconnect","className","children","chatboxDimensions","width","height","fileName","_jsxFileName","lineNumber","columnNumber","handleConnect","sendMessage","map","client","_c","$RefreshReg$"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport ChatBox from './components/ChatBox';\n\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\n\n\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\n\n// Encryption function\nconst encrypt = (message, key) => {\n  const encrypted = CryptoJS.AES.encrypt(message, key).toString();\n  return encrypted;\n};\n\n// Decryption function\nconst decrypt = (ciphertext, key) => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n  return decrypted;\n};\n\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  \n  const [connected, setConnected] = useState(false);\n  //const [connectedClients, setConnectedClients] = useState([]);\n  \n  \n  const connectedClients = useSelector(state => state.connectedClients)\n  const dispatch = useDispatch();\n  // action creators has all the methods like setConnectedClients\n  const {setConnectedClients} = bindActionCreators(actionCreators, dispatch)\n\n  useEffect(() => {\n    const handleReceivedMessage = (data) => {\n      const { clientId, message } = data;\n      const decryptedMessage = decrypt(message, 'Sixteen byte key');\n      console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages((prevMessages) => [...prevMessages, { clientId, message: decryptedMessage }]);\n    };\n\n    const handleConnectedClients = (clients) => {\n      setConnectedClients(clients);\n    };\n\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n\n\n\n  \n\n  \n  \n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className={`bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`}>\n        <h1 className=\"text-4xl mb-4\">Chat with Friends!</h1>\n        <ChatBox\n          messages={messages}\n          setMessages={setMessages}\n          connected={connected}\n          handleConnect={handleConnect}\n          sendMessage={sendMessage}\n        />\n        \n\n        {/* Display connected clients */}\n        <div className=\"flex flex-col items-start space-y-2\">\n          {connectedClients.map((client) => (\n            <div key={client} className=\"flex items-center\">\n              <div className={`w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n              <span className=\"ml-2\">{`Client ${client}`}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}