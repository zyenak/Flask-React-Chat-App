{"ast":null,"code":"import React,{useState,useEffect}from'react';import io from'socket.io-client';import'tailwindcss/base.css';import'tailwindcss/components.css';import'tailwindcss/utilities.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('http://localhost:5000');// Replace with your backend URL\nfunction App(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[connected,setConnected]=useState(false);const[chatboxDimensions,setChatboxDimensions]=useState({width:'w-96',height:'h-55'});useEffect(()=>{const handleReceivedMessage=data=>{const{clientId,message}=data;console.log(\"Received message from Client \".concat(clientId,\": \").concat(message));setMessages(prevMessages=>[...prevMessages,{clientId,message}]);};socket.on('message',handleReceivedMessage);return()=>{socket.off('message',handleReceivedMessage);socket.disconnect();};},[]);const handleConnect=()=>{if(!connected){socket.connect();setConnected(true);setChatboxDimensions({width:'w-116',height:'h-106'});console.log(\"Connected with Client ID: \".concat(socket.id));}else{socket.disconnect();setConnected(false);setChatboxDimensions({width:'w-96',height:'h-55'});console.log(\"Disconnected from Client ID: \".concat(socket.id));setMessages([]);}};const sendMessage=()=>{if(input.trim()!==''){const clientId=socket.id;socket.emit('message',{clientId,message:input});setInput('');}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md \".concat(chatboxDimensions.width,\" \").concat(chatboxDimensions.height),children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl mb-4\",children:\"Chat with Friends!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"Client \".concat(msg.clientId,\": \")}),msg.message]},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"flex-grow border border-gray-300 p-2 rounded\",type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white px-4 py-2 rounded \".concat(connected?'bg-red-500 hover:bg-red-600':'hover:bg-blue-600'),onClick:handleConnect,children:connected?'Disconnect':'Start Chat'}),connected&&/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",onClick:sendMessage,children:\"Send\"})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","io","jsx","_jsx","jsxs","_jsxs","socket","App","messages","setMessages","input","setInput","connected","setConnected","chatboxDimensions","setChatboxDimensions","width","height","handleReceivedMessage","data","clientId","message","console","log","concat","prevMessages","on","off","disconnect","handleConnect","connect","id","sendMessage","trim","emit","className","children","map","msg","index","type","value","onChange","e","target","placeholder","onClick"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\n\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [chatboxDimensions, setChatboxDimensions] = useState({\n    width: 'w-96',\n    height: 'h-55',\n  });\n\n  useEffect(() => {\n    const handleReceivedMessage = (data) => {\n      const { clientId, message } = data;\n      console.log(`Received message from Client ${clientId}: ${message}`);\n      setMessages((prevMessages) => [...prevMessages, { clientId, message }]);\n    };\n\n    socket.on('message', handleReceivedMessage);\n\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.disconnect();\n    };\n  }, []);\n\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({ width: 'w-116', height: 'h-106' });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({ width: 'w-96', height: 'h-55' });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      setMessages([]);\n    }\n  };\n\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      socket.emit('message', { clientId, message: input });\n      setInput('');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className={`bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`}>\n        <h1 className=\"text-4xl mb-4\">Chat with Friends!</h1>\n\n        <div className=\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\">\n          {messages.map((msg, index) => (\n            <div key={index} className=\"mb-2\">\n              <span className=\"font-bold\">{`Client ${msg.clientId}: `}</span>\n              {msg.message}\n            </div>\n          ))}\n        </div>\n\n\n        <div className=\"flex flex-col items-center\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <input\n              className=\"flex-grow border border-gray-300 p-2 rounded\"\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <button\n              className={`bg-blue-500 text-white px-4 py-2 rounded ${\n                connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'\n              }`}\n              onClick={handleConnect}\n            >\n              {connected ? 'Disconnect' : 'Start Chat'}\n            </button>\n            {connected && (\n              <button\n                className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n                onClick={sendMessage}\n              >\n                Send\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}