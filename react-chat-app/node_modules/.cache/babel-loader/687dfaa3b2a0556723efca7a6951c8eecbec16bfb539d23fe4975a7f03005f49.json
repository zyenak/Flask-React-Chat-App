{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZyPrograms\\\\Quest\\\\Projects\\\\Chat\\\\react-chat-app\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from '../state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport { useSocketContext } from '../SocketContext'; // Add this import\n\n//const socket = io('http://127.0.0.1:5000/'); // Replace with your backend URL\n\n// Encryption function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst encrypt = (message, key) => {\n  const encrypted = CryptoJS.AES.encrypt(message, key).toString();\n  return encrypted;\n};\n\n// Decryption function\nconst decrypt = (ciphertext, key) => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n  return decrypted;\n};\nconst ChatBox = () => {\n  _s();\n  const socket = useSocketContext();\n  const [input, setInput] = useState('');\n  const messages = useSelector(state => state.messages || []);\n  const chatboxDimensions = useSelector(state => state.chatboxDimensions || {\n    width: 'w-96',\n    height: 'h-55'\n  });\n  const connected = useSelector(state => state.connected || false);\n  const connectedClients = useSelector(state => state.connectedClients || []);\n  const dispatch = useDispatch();\n  const {\n    setConnectedClients,\n    setMessages,\n    removeMessagesForClient,\n    setChatboxDimensions,\n    setConnected\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const handleReceivedMessage = data => {\n      const {\n        clientId,\n        message\n      } = data;\n      const decryptedMessage = decrypt(message, 'Sixteen byte key');\n      console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages(clientId, decryptedMessage);\n    };\n    const handleConnectedClients = clients => {\n      setConnectedClients(clients);\n    };\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      const encryptedMessage = encrypt(input, 'Sixteen byte key');\n      socket.emit('message', {\n        clientId,\n        message: encryptedMessage\n      });\n      setInput('');\n    }\n  };\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({\n        width: 'w-116',\n        height: 'h-106'\n      });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({\n        width: 'w-96',\n        height: 'h-55'\n      });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      removeMessagesForClient([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl mb-4\",\n          children: \"Chat with Friends!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\",\n          children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: `Client ${msg.clientId}: `\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-4 mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"flex-grow border border-gray-300 p-2 rounded\",\n              type: \"text\",\n              value: input,\n              onChange: e => setInput(e.target.value),\n              placeholder: \"Type your message...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `bg-blue-500 text-white px-4 py-2 rounded ${connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'}`,\n              onClick: handleConnect,\n              children: connected ? 'Disconnect' : 'Start Chat'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), connected && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-start space-y-2\",\n          children: connectedClients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-2\",\n              children: `Client ${client}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, client, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBox, \"I9Tl6Sg13gLdZUQZDmrrPp8esiA=\", false, function () {\n  return [useSocketContext, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","bindActionCreators","actionCreators","io","CryptoJS","useSocketContext","jsxDEV","_jsxDEV","encrypt","message","key","encrypted","AES","toString","decrypt","ciphertext","bytes","decrypted","enc","Utf8","ChatBox","_s","socket","input","setInput","messages","state","chatboxDimensions","width","height","connected","connectedClients","dispatch","setConnectedClients","setMessages","removeMessagesForClient","setChatboxDimensions","setConnected","handleReceivedMessage","data","clientId","decryptedMessage","console","log","handleConnectedClients","clients","on","off","disconnect","sendMessage","trim","id","encryptedMessage","emit","handleConnect","connect","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","client","_c","$RefreshReg$"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state/index';\r\nimport io from 'socket.io-client';\r\nimport CryptoJS from 'crypto-js';\r\nimport { useSocketContext  } from '../SocketContext'; // Add this import\r\n\r\n\r\n//const socket = io('http://127.0.0.1:5000/'); // Replace with your backend URL\r\n\r\n// Encryption function\r\nconst encrypt = (message, key) => {\r\n    const encrypted = CryptoJS.AES.encrypt(message, key).toString();\r\n    return encrypted;\r\n};\r\n\r\n// Decryption function\r\nconst decrypt = (ciphertext, key) => {\r\n    const bytes = CryptoJS.AES.decrypt(ciphertext, key);\r\n    const decrypted = bytes.toString(CryptoJS.enc.Utf8);\r\n    return decrypted;\r\n};\r\n\r\n\r\nconst ChatBox = () => {\r\n\r\n    const socket = useSocketContext();\r\n    \r\n    const [input, setInput] = useState('');\r\n\r\n\r\n    const messages = useSelector((state) => state.messages || []);\r\n    const chatboxDimensions = useSelector((state) => state.chatboxDimensions || { width: 'w-96', height: 'h-55' });\r\n    const connected = useSelector((state) => state.connected || false);\r\n    const connectedClients = useSelector((state) => state.connectedClients || []);\r\n\r\n    const dispatch = useDispatch();\r\n    const { setConnectedClients, setMessages, removeMessagesForClient, setChatboxDimensions, setConnected } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    useEffect(() => {\r\n        const handleReceivedMessage = (data) => {\r\n            const { clientId, message } = data;\r\n            const decryptedMessage = decrypt(message, 'Sixteen byte key');\r\n            console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\r\n            setMessages(clientId, decryptedMessage);\r\n\r\n        };\r\n\r\n        const handleConnectedClients = (clients) => {\r\n            setConnectedClients(clients);\r\n        };\r\n\r\n        socket.on('message', handleReceivedMessage);\r\n        socket.on('connected_clients', handleConnectedClients);\r\n\r\n        return () => {\r\n            socket.off('message', handleReceivedMessage);\r\n            socket.off('connected_clients', handleConnectedClients);\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() !== '') {\r\n            const clientId = socket.id;\r\n            const encryptedMessage = encrypt(input, 'Sixteen byte key');\r\n            socket.emit('message', { clientId, message: encryptedMessage });\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const handleConnect = () => {\r\n        if (!connected) {\r\n            socket.connect();\r\n            setConnected(true);\r\n            setChatboxDimensions({ width: 'w-116', height: 'h-106' });\r\n            console.log(`Connected with Client ID: ${socket.id}`);\r\n        } else {\r\n            socket.disconnect();\r\n            setConnected(false);\r\n            setChatboxDimensions({ width: 'w-96', height: 'h-55' });\r\n            console.log(`Disconnected from Client ID: ${socket.id}`);\r\n            removeMessagesForClient([]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n                <div className={`bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`}>\r\n                    <h1 className=\"text-4xl mb-4\">Chat with Friends!</h1>\r\n                    <div className=\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className=\"mb-2\">\r\n                                <span className=\"font-bold\">{`Client ${msg.clientId}: `}</span>\r\n                                {msg.message}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <div className=\"flex items-center space-x-4 mb-4\">\r\n                            <input\r\n                                className=\"flex-grow border border-gray-300 p-2 rounded\"\r\n                                type=\"text\"\r\n                                value={input}\r\n                                onChange={(e) => setInput(e.target.value)}\r\n                                placeholder=\"Type your message...\"\r\n                            />\r\n                            <button\r\n                                className={`bg-blue-500 text-white px-4 py-2 rounded ${connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'\r\n                                    }`}\r\n                                onClick={handleConnect}\r\n                            >\r\n                                {connected ? 'Disconnect' : 'Start Chat'}\r\n                            </button>\r\n                            {connected && (\r\n                                <button\r\n                                    className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n                                    onClick={sendMessage}\r\n                                >\r\n                                    Send\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Display connected clients */}\r\n                    <div className=\"flex flex-col items-start space-y-2\">\r\n                        {connectedClients.map((client) => (\r\n                            <div key={client} className=\"flex items-center\">\r\n                                <div className={`w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                                <span className=\"ml-2\">{`Client ${client}`}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}