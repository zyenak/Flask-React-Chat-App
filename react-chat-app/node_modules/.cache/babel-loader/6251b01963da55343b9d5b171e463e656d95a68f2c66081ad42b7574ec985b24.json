{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZyPrograms\\\\Quest\\\\Projects\\\\Chat\\\\react-chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [connected, setConnected] = useState(false);\n  //const [connectedClients, setConnectedClients] = useState([]);\n  const [chatboxDimensions, setChatboxDimensions] = useState({\n    width: 'w-96',\n    height: 'h-55'\n  });\n  const connectedClients = useSelector(state => state.connectedClients);\n  const dispatch = useDispatch();\n  // action creators has all the methods like setConnectedClients\n  const {\n    setConnectedClients\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const handleReceivedMessage = data => {\n      const {\n        clientId,\n        message\n      } = data;\n      const decryptedMessage = decrypt(message);\n      console.log(`Received message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages(prevMessages => [...prevMessages, {\n        clientId,\n        message: decryptedMessage\n      }]);\n    };\n    const handleConnectedClients = clients => {\n      setConnectedClients(clients);\n    };\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({\n        width: 'w-116',\n        height: 'h-106'\n      });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({\n        width: 'w-96',\n        height: 'h-55'\n      });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      setMessages([]);\n    }\n  };\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      const encryptedMessage = encrypt(input);\n      socket.emit('message', {\n        clientId,\n        message: encryptedMessage\n      });\n      setInput('');\n    }\n  };\n  const encrypt = message => {\n    const encryptedMessage = CryptoJS.AES.encrypt(message, 'mysecretpassword', {\n      iv: 'initialvector123'\n    }).toString();\n    return encryptedMessage;\n  };\n  const decrypt = encryptedMessage => {\n    const decryptedBytes = CryptoJS.AES.decrypt(encryptedMessage, 'mysecretpassword', {\n      iv: 'initialvector123'\n    });\n\n    // Convert the decrypted bytes to a string using Utf8.stringify\n    const decryptedMessage = CryptoJS.enc.Utf8.stringify(decryptedBytes);\n    return decryptedMessage;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl mb-4\",\n        children: \"Chat with Friends!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: `Client ${msg.clientId}: `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"flex-grow border border-gray-300 p-2 rounded\",\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Type your message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `bg-blue-500 text-white px-4 py-2 rounded ${connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'}`,\n            onClick: handleConnect,\n            children: connected ? 'Disconnect' : 'Start Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), connected && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-start space-y-2\",\n        children: connectedClients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2\",\n            children: `Client ${client}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, client, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zA4FB+g1+RkZYoajrbBO+2LjQsg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","bindActionCreators","actionCreators","io","CryptoJS","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","connected","setConnected","chatboxDimensions","setChatboxDimensions","width","height","connectedClients","state","dispatch","setConnectedClients","handleReceivedMessage","data","clientId","message","decryptedMessage","decrypt","console","log","prevMessages","handleConnectedClients","clients","on","off","disconnect","handleConnect","connect","id","sendMessage","trim","encryptedMessage","encrypt","emit","AES","iv","toString","decryptedBytes","enc","Utf8","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","client","_c","$RefreshReg$"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\n\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\n\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [connected, setConnected] = useState(false);\n  //const [connectedClients, setConnectedClients] = useState([]);\n  const [chatboxDimensions, setChatboxDimensions] = useState({\n    width: 'w-96',\n    height: 'h-55',\n  });\n  \n  const connectedClients = useSelector(state => state.connectedClients)\n  const dispatch = useDispatch();\n  // action creators has all the methods like setConnectedClients\n  const {setConnectedClients} = bindActionCreators(actionCreators, dispatch)\n\n  useEffect(() => {\n    const handleReceivedMessage = (data) => {\n      const { clientId, message } = data;\n      const decryptedMessage = decrypt(message);\n      console.log(`Received message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages((prevMessages) => [...prevMessages, { clientId, message: decryptedMessage }]);\n    };\n\n    const handleConnectedClients = (clients) => {\n      setConnectedClients(clients);\n    };\n\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n\n\n\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({ width: 'w-116', height: 'h-106' });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({ width: 'w-96', height: 'h-55' });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      setMessages([]);\n    }\n  };\n\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      const encryptedMessage = encrypt(input);\n      socket.emit('message', { clientId, message: encryptedMessage });\n      setInput('');\n    }\n  };\n\n  const encrypt = (message) => {\n    const encryptedMessage = CryptoJS.AES.encrypt(message, 'mysecretpassword', { iv: 'initialvector123' }).toString();\n    return encryptedMessage;\n  };\n\n  const decrypt = (encryptedMessage) => {\n    const decryptedBytes = CryptoJS.AES.decrypt(encryptedMessage, 'mysecretpassword', { iv: 'initialvector123' });\n  \n    // Convert the decrypted bytes to a string using Utf8.stringify\n    const decryptedMessage = CryptoJS.enc.Utf8.stringify(decryptedBytes);\n  \n    return decryptedMessage;\n  };\n  \n    \n  \n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <div className={`bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`}>\n        <h1 className=\"text-4xl mb-4\">Chat with Friends!</h1>\n\n        <div className=\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\">\n          {messages.map((msg, index) => (\n            <div key={index} className=\"mb-2\">\n              <span className=\"font-bold\">{`Client ${msg.clientId}: `}</span>\n              {msg.message}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex flex-col items-center\">\n          <div className=\"flex items-center space-x-4 mb-4\">\n            <input\n              className=\"flex-grow border border-gray-300 p-2 rounded\"\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <button\n              className={`bg-blue-500 text-white px-4 py-2 rounded ${\n                connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'\n              }`}\n              onClick={handleConnect}\n            >\n              {connected ? 'Disconnect' : 'Start Chat'}\n            </button>\n            {connected && (\n              <button\n                className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n                onClick={sendMessage}\n              >\n                Send\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Display connected clients */}\n        <div className=\"flex flex-col items-start space-y-2\">\n          {connectedClients.map((client) => (\n            <div key={client} className=\"flex items-center\">\n              <div className={`w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\n              <span className=\"ml-2\">{`Client ${client}`}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAO,sBAAsB;AAC7B,OAAO,4BAA4B;AACnC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC;IACzDqB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACD,gBAAgB,CAAC;EACrE,MAAME,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9B;EACA,MAAM;IAACwB;EAAmB,CAAC,GAAGtB,kBAAkB,CAACC,cAAc,EAAEoB,QAAQ,CAAC;EAE1ExB,SAAS,CAAC,MAAM;IACd,MAAM0B,qBAAqB,GAAIC,IAAI,IAAK;MACtC,MAAM;QAAEC,QAAQ;QAAEC;MAAQ,CAAC,GAAGF,IAAI;MAClC,MAAMG,gBAAgB,GAAGC,OAAO,CAACF,OAAO,CAAC;MACzCG,OAAO,CAACC,GAAG,CAAE,gCAA+BL,QAAS,KAAIE,gBAAiB,EAAC,CAAC;MAC5EjB,WAAW,CAAEqB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEN,QAAQ;QAAEC,OAAO,EAAEC;MAAiB,CAAC,CAAC,CAAC;IAC3F,CAAC;IAED,MAAMK,sBAAsB,GAAIC,OAAO,IAAK;MAC1CX,mBAAmB,CAACW,OAAO,CAAC;IAC9B,CAAC;IAED3B,MAAM,CAAC4B,EAAE,CAAC,SAAS,EAAEX,qBAAqB,CAAC;IAC3CjB,MAAM,CAAC4B,EAAE,CAAC,mBAAmB,EAAEF,sBAAsB,CAAC;IAEtD,OAAO,MAAM;MACX1B,MAAM,CAAC6B,GAAG,CAAC,SAAS,EAAEZ,qBAAqB,CAAC;MAC5CjB,MAAM,CAAC6B,GAAG,CAAC,mBAAmB,EAAEH,sBAAsB,CAAC;MACvD1B,MAAM,CAAC8B,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAIN,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACxB,SAAS,EAAE;MACdP,MAAM,CAACgC,OAAO,CAAC,CAAC;MAChBxB,YAAY,CAAC,IAAI,CAAC;MAClBE,oBAAoB,CAAC;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAC,CAAC;MACzDW,OAAO,CAACC,GAAG,CAAE,6BAA4BxB,MAAM,CAACiC,EAAG,EAAC,CAAC;IACvD,CAAC,MAAM;MACLjC,MAAM,CAAC8B,UAAU,CAAC,CAAC;MACnBtB,YAAY,CAAC,KAAK,CAAC;MACnBE,oBAAoB,CAAC;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;MACvDW,OAAO,CAACC,GAAG,CAAE,gCAA+BxB,MAAM,CAACiC,EAAG,EAAC,CAAC;MACxD7B,WAAW,CAAC,EAAE,CAAC;IACjB;EACF,CAAC;EAED,MAAM8B,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI7B,KAAK,CAAC8B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,MAAMhB,QAAQ,GAAGnB,MAAM,CAACiC,EAAE;MAC1B,MAAMG,gBAAgB,GAAGC,OAAO,CAAChC,KAAK,CAAC;MACvCL,MAAM,CAACsC,IAAI,CAAC,SAAS,EAAE;QAAEnB,QAAQ;QAAEC,OAAO,EAAEgB;MAAiB,CAAC,CAAC;MAC/D9B,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAM+B,OAAO,GAAIjB,OAAO,IAAK;IAC3B,MAAMgB,gBAAgB,GAAGvC,QAAQ,CAAC0C,GAAG,CAACF,OAAO,CAACjB,OAAO,EAAE,kBAAkB,EAAE;MAAEoB,EAAE,EAAE;IAAmB,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IACjH,OAAOL,gBAAgB;EACzB,CAAC;EAED,MAAMd,OAAO,GAAIc,gBAAgB,IAAK;IACpC,MAAMM,cAAc,GAAG7C,QAAQ,CAAC0C,GAAG,CAACjB,OAAO,CAACc,gBAAgB,EAAE,kBAAkB,EAAE;MAAEI,EAAE,EAAE;IAAmB,CAAC,CAAC;;IAE7G;IACA,MAAMnB,gBAAgB,GAAGxB,QAAQ,CAAC8C,GAAG,CAACC,IAAI,CAACC,SAAS,CAACH,cAAc,CAAC;IAEpE,OAAOrB,gBAAgB;EACzB,CAAC;EAKD,oBACEtB,OAAA;IAAK+C,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxEhD,OAAA;MAAK+C,SAAS,EAAG,qCAAoCrC,iBAAiB,CAACE,KAAM,IAAGF,iBAAiB,CAACG,MAAO,EAAE;MAAAmC,QAAA,gBACzGhD,OAAA;QAAI+C,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAErDpD,OAAA;QAAK+C,SAAS,EAAC,oEAAoE;QAAAC,QAAA,EAChF5C,QAAQ,CAACiD,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvD,OAAA;UAAiB+C,SAAS,EAAC,MAAM;UAAAC,QAAA,gBAC/BhD,OAAA;YAAM+C,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAG,UAASM,GAAG,CAAClC,QAAS;UAAG;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EAC9DE,GAAG,CAACjC,OAAO;QAAA,GAFJkC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENpD,OAAA;QAAK+C,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzChD,OAAA;UAAK+C,SAAS,EAAC,kCAAkC;UAAAC,QAAA,gBAC/ChD,OAAA;YACE+C,SAAS,EAAC,8CAA8C;YACxDS,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEnD,KAAM;YACboD,QAAQ,EAAGC,CAAC,IAAKpD,QAAQ,CAACoD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC1CI,WAAW,EAAC;UAAsB;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC,eACFpD,OAAA;YACE+C,SAAS,EAAG,4CACVvC,SAAS,GAAG,6BAA6B,GAAG,mBAC7C,EAAE;YACHsD,OAAO,EAAE9B,aAAc;YAAAgB,QAAA,EAEtBxC,SAAS,GAAG,YAAY,GAAG;UAAY;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,EACR5C,SAAS,iBACRR,OAAA;YACE+C,SAAS,EAAC,8DAA8D;YACxEe,OAAO,EAAE3B,WAAY;YAAAa,QAAA,EACtB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNpD,OAAA;QAAK+C,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EACjDlC,gBAAgB,CAACuC,GAAG,CAAEU,MAAM,iBAC3B/D,OAAA;UAAkB+C,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC7ChD,OAAA;YAAK+C,SAAS,EAAG,wBAAuBvC,SAAS,GAAG,cAAc,GAAG,YAAa;UAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3FpD,OAAA;YAAM+C,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAG,UAASe,MAAO;UAAC;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GAF1CW,MAAM;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGX,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjD,EAAA,CAtIQD,GAAG;EAAA,QAUeR,WAAW,EACnBD,WAAW;AAAA;AAAAuE,EAAA,GAXrB9D,GAAG;AAwIZ,eAAeA,GAAG;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}