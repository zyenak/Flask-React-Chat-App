{"ast":null,"code":"var _jsxFileName = \"D:\\\\ZyPrograms\\\\Quest\\\\Projects\\\\Chat\\\\react-chat-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport ChatBox from './components/ChatBox';\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\n// Encryption function\nconst encrypt = (message, key) => {\n  const encrypted = CryptoJS.AES.encrypt(message, key).toString();\n  return encrypted;\n};\n\n// Decryption function\nconst decrypt = (ciphertext, key) => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n  return decrypted;\n};\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const messages = useSelector(state => state.messages || []);\n  const chatboxDimensions = useSelector(state => state.chatboxDimensions || {\n    width: 'w-96',\n    height: 'h-55'\n  });\n  const connected = useSelector(state => state.connected || false);\n  const connectedClients = useSelector(state => state.connectedClients || []);\n  const dispatch = useDispatch();\n  const {\n    setConnectedClients,\n    setMessages,\n    removeMessagesForClient,\n    setChatboxDimensions,\n    setConnected\n  } = bindActionCreators(actionCreators, dispatch);\n  useEffect(() => {\n    const handleReceivedMessage = data => {\n      const {\n        clientId,\n        message\n      } = data;\n      const decryptedMessage = decrypt(message, 'Sixteen byte key');\n      console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages(clientId, decryptedMessage);\n    };\n    const handleConnectedClients = clients => {\n      setConnectedClients(clients);\n    };\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      const encryptedMessage = encrypt(input, 'Sixteen byte key');\n      socket.emit('message', {\n        clientId,\n        message: encryptedMessage\n      });\n      setInput('');\n    }\n  };\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({\n        width: 'w-116',\n        height: 'h-106'\n      });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({\n        width: 'w-96',\n        height: 'h-55'\n      });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      removeMessagesForClient([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChatBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/YUc7SLjPEeUVl6Jl89Z9jFf3ds=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","bindActionCreators","actionCreators","io","CryptoJS","ChatBox","jsxDEV","_jsxDEV","socket","encrypt","message","key","encrypted","AES","toString","decrypt","ciphertext","bytes","decrypted","enc","Utf8","App","_s","input","setInput","messages","state","chatboxDimensions","width","height","connected","connectedClients","dispatch","setConnectedClients","setMessages","removeMessagesForClient","setChatboxDimensions","setConnected","handleReceivedMessage","data","clientId","decryptedMessage","console","log","handleConnectedClients","clients","on","off","disconnect","sendMessage","trim","id","encryptedMessage","emit","handleConnect","connect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionCreators } from './state/index';\nimport io from 'socket.io-client';\nimport CryptoJS from 'crypto-js';\nimport ChatBox from './components/ChatBox';\n\nimport 'tailwindcss/base.css';\nimport 'tailwindcss/components.css';\nimport 'tailwindcss/utilities.css';\n\n\nconst socket = io('http://localhost:5000'); // Replace with your backend URL\n\n\n// Encryption function\nconst encrypt = (message, key) => {\n  const encrypted = CryptoJS.AES.encrypt(message, key).toString();\n  return encrypted;\n};\n\n// Decryption function\nconst decrypt = (ciphertext, key) => {\n  const bytes = CryptoJS.AES.decrypt(ciphertext, key);\n  const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n  return decrypted;\n};\n\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n\n\n  const messages = useSelector((state) => state.messages || []);\n  const chatboxDimensions = useSelector((state) => state.chatboxDimensions || { width: 'w-96', height: 'h-55' });\n  const connected = useSelector((state) => state.connected || false);\n  const connectedClients = useSelector((state) => state.connectedClients || []);\n\n  const dispatch = useDispatch();\n  const { setConnectedClients, setMessages, removeMessagesForClient, setChatboxDimensions, setConnected } = bindActionCreators(actionCreators, dispatch);\n\n  useEffect(() => {\n    const handleReceivedMessage = (data) => {\n      const { clientId, message } = data;\n      const decryptedMessage = decrypt(message, 'Sixteen byte key');\n      console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\n      setMessages(clientId, decryptedMessage);\n\n    };\n\n    const handleConnectedClients = (clients) => {\n      setConnectedClients(clients);\n    };\n\n    socket.on('message', handleReceivedMessage);\n    socket.on('connected_clients', handleConnectedClients);\n\n    return () => {\n      socket.off('message', handleReceivedMessage);\n      socket.off('connected_clients', handleConnectedClients);\n      socket.disconnect();\n    };\n  }, []);\n\n\n\n  const sendMessage = () => {\n    if (input.trim() !== '') {\n      const clientId = socket.id;\n      const encryptedMessage = encrypt(input, 'Sixteen byte key');\n      socket.emit('message', { clientId, message: encryptedMessage });\n      setInput('');\n    }\n  };\n\n  const handleConnect = () => {\n    if (!connected) {\n      socket.connect();\n      setConnected(true);\n      setChatboxDimensions({ width: 'w-116', height: 'h-106' });\n      console.log(`Connected with Client ID: ${socket.id}`);\n    } else {\n      socket.disconnect();\n      setConnected(false);\n      setChatboxDimensions({ width: 'w-96', height: 'h-55' });\n      console.log(`Disconnected from Client ID: ${socket.id}`);\n      removeMessagesForClient([]);\n    }\n  };\n\n\n\n\n  return (\n    <div>\n      < ChatBox/>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}