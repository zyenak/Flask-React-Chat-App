{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{bindActionCreators}from'redux';import{actionCreators}from'../state/index';import io from'socket.io-client';import CryptoJS from'crypto-js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const socket=io('http://127.0.0.1:5000/');// Replace with your backend URL\n// Encryption function\nconst encrypt=(message,key)=>{const encrypted=CryptoJS.AES.encrypt(message,key).toString();return encrypted;};// Decryption function\nconst decrypt=(ciphertext,key)=>{const bytes=CryptoJS.AES.decrypt(ciphertext,key);const decrypted=bytes.toString(CryptoJS.enc.Utf8);return decrypted;};const ChatBox=()=>{const[input,setInput]=useState('');const messages=useSelector(state=>state.messages||[]);const chatboxDimensions=useSelector(state=>state.chatboxDimensions||{width:'w-96',height:'h-55'});const connected=useSelector(state=>state.connected||false);const connectedClients=useSelector(state=>state.connectedClients||[]);const dispatch=useDispatch();const{setConnectedClients,setMessages,removeMessagesForClient,setChatboxDimensions,setConnected}=bindActionCreators(actionCreators,dispatch);useEffect(()=>{const handleReceivedMessage=data=>{const{clientId,message}=data;const decryptedMessage=decrypt(message,'Sixteen byte key');console.log(\"Received decrypted message from Client \".concat(clientId,\": \").concat(decryptedMessage));setMessages(clientId,decryptedMessage);};const handleConnectedClients=clients=>{setConnectedClients(clients);};socket.on('message',handleReceivedMessage);socket.on('connected_clients',handleConnectedClients);return()=>{socket.off('message',handleReceivedMessage);socket.off('connected_clients',handleConnectedClients);socket.disconnect();};},[]);const sendMessage=()=>{if(input.trim()!==''){const clientId=socket.id;const encryptedMessage=encrypt(input,'Sixteen byte key');socket.emit('message',{clientId,message:encryptedMessage});setInput('');}};const handleConnect=()=>{if(!connected){socket.connect();setConnected(true);setChatboxDimensions({width:'w-116',height:'h-106'});console.log(\"Connected with Client ID: \".concat(socket.id));}else{socket.disconnect();setConnected(false);setChatboxDimensions({width:'w-96',height:'h-55'});console.log(\"Disconnected from Client ID: \".concat(socket.id));removeMessagesForClient([]);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded-lg shadow-md \".concat(chatboxDimensions.width,\" \").concat(chatboxDimensions.height),children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl mb-4\",children:\"Chat with Friends!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\",children:messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"Client \".concat(msg.clientId,\": \")}),msg.message]},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-4 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"flex-grow border border-gray-300 p-2 rounded\",type:\"text\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type your message...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white px-4 py-2 rounded \".concat(connected?'bg-red-500 hover:bg-red-600':'hover:bg-blue-600'),onClick:handleConnect,children:connected?'Disconnect':'Start Chat'}),connected&&/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",onClick:sendMessage,children:\"Send\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-start space-y-2\",children:connectedClients.map(client=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4 rounded-full \".concat(connected?'bg-green-500':'bg-red-500')}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2\",children:\"Client \".concat(client)})]},client))})]})})});};export default ChatBox;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","bindActionCreators","actionCreators","io","CryptoJS","jsx","_jsx","jsxs","_jsxs","socket","encrypt","message","key","encrypted","AES","toString","decrypt","ciphertext","bytes","decrypted","enc","Utf8","ChatBox","input","setInput","messages","state","chatboxDimensions","width","height","connected","connectedClients","dispatch","setConnectedClients","setMessages","removeMessagesForClient","setChatboxDimensions","setConnected","handleReceivedMessage","data","clientId","decryptedMessage","console","log","concat","handleConnectedClients","clients","on","off","disconnect","sendMessage","trim","id","encryptedMessage","emit","handleConnect","connect","children","className","map","msg","index","type","value","onChange","e","target","placeholder","onClick","client"],"sources":["D:/ZyPrograms/Quest/Projects/Chat/react-chat-app/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state/index';\r\nimport io from 'socket.io-client';\r\nimport CryptoJS from 'crypto-js';\r\n\r\n\r\nconst socket = io('http://127.0.0.1:5000/'); // Replace with your backend URL\r\n\r\n// Encryption function\r\nconst encrypt = (message, key) => {\r\n    const encrypted = CryptoJS.AES.encrypt(message, key).toString();\r\n    return encrypted;\r\n};\r\n\r\n// Decryption function\r\nconst decrypt = (ciphertext, key) => {\r\n    const bytes = CryptoJS.AES.decrypt(ciphertext, key);\r\n    const decrypted = bytes.toString(CryptoJS.enc.Utf8);\r\n    return decrypted;\r\n};\r\n\r\n\r\nconst ChatBox = () => {\r\n  \r\n    const [input, setInput] = useState('');\r\n\r\n\r\n    const messages = useSelector((state) => state.messages || []);\r\n    const chatboxDimensions = useSelector((state) => state.chatboxDimensions || { width: 'w-96', height: 'h-55' });\r\n    const connected = useSelector((state) => state.connected || false);\r\n    const connectedClients = useSelector((state) => state.connectedClients || []);\r\n\r\n    const dispatch = useDispatch();\r\n    const { setConnectedClients, setMessages, removeMessagesForClient, setChatboxDimensions, setConnected } = bindActionCreators(actionCreators, dispatch);\r\n\r\n    useEffect(() => {\r\n        const handleReceivedMessage = (data) => {\r\n            const { clientId, message } = data;\r\n            const decryptedMessage = decrypt(message, 'Sixteen byte key');\r\n            console.log(`Received decrypted message from Client ${clientId}: ${decryptedMessage}`);\r\n            setMessages(clientId, decryptedMessage);\r\n\r\n        };\r\n\r\n        const handleConnectedClients = (clients) => {\r\n            setConnectedClients(clients);\r\n        };\r\n\r\n        socket.on('message', handleReceivedMessage);\r\n        socket.on('connected_clients', handleConnectedClients);\r\n\r\n        return () => {\r\n            socket.off('message', handleReceivedMessage);\r\n            socket.off('connected_clients', handleConnectedClients);\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n\r\n\r\n    const sendMessage = () => {\r\n        if (input.trim() !== '') {\r\n            const clientId = socket.id;\r\n            const encryptedMessage = encrypt(input, 'Sixteen byte key');\r\n            socket.emit('message', { clientId, message: encryptedMessage });\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    const handleConnect = () => {\r\n        if (!connected) {\r\n            socket.connect();\r\n            setConnected(true);\r\n            setChatboxDimensions({ width: 'w-116', height: 'h-106' });\r\n            console.log(`Connected with Client ID: ${socket.id}`);\r\n        } else {\r\n            socket.disconnect();\r\n            setConnected(false);\r\n            setChatboxDimensions({ width: 'w-96', height: 'h-55' });\r\n            console.log(`Disconnected from Client ID: ${socket.id}`);\r\n            removeMessagesForClient([]);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\r\n                <div className={`bg-white p-8 rounded-lg shadow-md ${chatboxDimensions.width} ${chatboxDimensions.height}`}>\r\n                    <h1 className=\"text-4xl mb-4\">Chat with Friends!</h1>\r\n                    <div className=\"flex flex-col h-60 overflow-y-auto border border-gray-300 p-4 mb-4\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index} className=\"mb-2\">\r\n                                <span className=\"font-bold\">{`Client ${msg.clientId}: `}</span>\r\n                                {msg.message}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-col items-center\">\r\n                        <div className=\"flex items-center space-x-4 mb-4\">\r\n                            <input\r\n                                className=\"flex-grow border border-gray-300 p-2 rounded\"\r\n                                type=\"text\"\r\n                                value={input}\r\n                                onChange={(e) => setInput(e.target.value)}\r\n                                placeholder=\"Type your message...\"\r\n                            />\r\n                            <button\r\n                                className={`bg-blue-500 text-white px-4 py-2 rounded ${connected ? 'bg-red-500 hover:bg-red-600' : 'hover:bg-blue-600'\r\n                                    }`}\r\n                                onClick={handleConnect}\r\n                            >\r\n                                {connected ? 'Disconnect' : 'Start Chat'}\r\n                            </button>\r\n                            {connected && (\r\n                                <button\r\n                                    className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n                                    onClick={sendMessage}\r\n                                >\r\n                                    Send\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    {/* Display connected clients */}\r\n                    <div className=\"flex flex-col items-start space-y-2\">\r\n                        {connectedClients.map((client) => (\r\n                            <div key={client} className=\"flex items-center\">\r\n                                <div className={`w-4 h-4 rounded-full ${connected ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n                                <span className=\"ml-2\">{`Client ${client}`}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}